apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-deployment
  namespace: ops-monit
  labels:
    app: prometheus-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus-server
  template:
    metadata:
      labels:
        app: prometheus-server
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus
          args:
            - "--storage.tsdb.retention.time=31d"
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.path=/prometheus/"
            - "--web.enable-lifecycle"
          env:
            - name: NO_PROXY
              value: .svc,.local,<ip node1>,<ip node2>,<dst>
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: prometheus-config-volume
              mountPath: /etc/prometheus/
            - name: prometheus-storage-volume
              mountPath: /prometheus/
        - name: configmap-reload
          image: "jimmidyson/configmap-reload:v0.2.2"
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsNonRoot: true
            runAsUser: 65534
          env:
          - name: NO_PROXY
            value: localhost,127.0.0.1
          args:
            - --volume-dir=/etc/prometheus/
            - --webhook-url=http://127.0.0.1:9090/-/reload
          volumeMounts:
            - mountPath: /etc/prometheus/
              name: prometheus-config-volume
              readOnly: true
      volumes:
        - name: prometheus-config-volume
          configMap:
            defaultMode: 420
            name: prometheus-server-conf
  
        - name: prometheus-storage-volume
          emptyDir: {}